// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.PWMTalonSRX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

/**
 *
 */
public class Sub_Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMTalonSRX leftFrontDrive;
private PWMTalonSRX leftBackDrive;
private MotorControllerGroup leftMotorGroup;
private PWMTalonSRX rightFrontDrive;
private PWMTalonSRX rightBackDrive;
private MotorControllerGroup rightMotorGroup;
private DifferentialDrive differentialDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
    *
    */
    public Sub_Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFrontDrive = new PWMTalonSRX(1);
 addChild("LeftFrontDrive",leftFrontDrive);
 leftFrontDrive.setInverted(false);

leftBackDrive = new PWMTalonSRX(0);
 addChild("LeftBackDrive",leftBackDrive);
 leftBackDrive.setInverted(false);

leftMotorGroup = new MotorControllerGroup(leftFrontDrive, leftBackDrive  );
 addChild("LeftMotorGroup",leftMotorGroup);
 

rightFrontDrive = new PWMTalonSRX(3);
 addChild("RightFrontDrive",rightFrontDrive);
 rightFrontDrive.setInverted(false);

rightBackDrive = new PWMTalonSRX(4);
 addChild("RightBackDrive",rightBackDrive);
 rightBackDrive.setInverted(false);

rightMotorGroup = new MotorControllerGroup(rightFrontDrive, rightBackDrive  );
 addChild("RightMotorGroup",rightMotorGroup);
 

differentialDrive1 = new DifferentialDrive(leftMotorGroup, rightMotorGroup);
 addChild("Differential Drive 1",differentialDrive1);
 differentialDrive1.setSafetyEnabled(true);
differentialDrive1.setExpiration(0.1);
differentialDrive1.setMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}
